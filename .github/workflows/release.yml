name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-windows:
    runs-on: windows-2022

    steps:
    - name: Enable long paths in git
      run: git config --global core.longpaths true

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Install NSIS
      uses: repolevedavaj/install-nsis@v1.0.1
      with:
        nsis-version: '3.11'

    - name: Restore dependencies
      run: dotnet restore Everywhere.sln

    - name: Get version from tag
      id: get_version
      shell: pwsh
      run: |
        $version = $env:GITHUB_REF -replace 'refs/tags/v', ''
        echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Build Everywhere.Windows (Release)
      shell: pwsh
      run: |
        dotnet build src/Everywhere.Windows/Everywhere.Windows.csproj -c Release --no-restore

    - name: Publish Everywhere.Windows
      shell: pwsh
      run: |
        dotnet publish src/Everywhere.Windows/Everywhere.Windows.csproj -c Release -r win-x64 --self-contained true -p:AssemblyVersion=$env:VERSION -p:FileVersion=$env:VERSION -o ./publish

    - name: Build NSIS installer
      shell: pwsh
      run: |
        makensis "/DVERSION=${{env.VERSION}}" "tools/installer.nsi"
        $exePath = "Everywhere-Windows-x64-Setup-v${{env.VERSION}}.exe"
        echo "EXE_PATH=./${exePath}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Create release zip
      shell: pwsh
      run: |
        Compress-Archive -Path ./publish/* -DestinationPath ./Everywhere-Windows-x64-v$env:VERSION.zip

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        name: Everywhere v${{env.VERSION}}
        draft: false
        prerelease: false
        files: |
          ./Everywhere-Windows-x64-v${{env.VERSION}}.zip
          ./Everywhere-Windows-x64-Setup-v${{env.VERSION}}.exe
        generate_release_notes: true
