<v:ReactiveWindow
  x:Class="Everywhere.Views.ChatFloatingWindow" xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:at="clr-namespace:Everywhere.AttachedProperties"
  xmlns:be="clr-namespace:Everywhere.Behaviors" xmlns:chat="clr-namespace:Everywhere.Chat"
  xmlns:common="clr-namespace:Everywhere.Common" xmlns:interop="clr-namespace:Everywhere.Interop"
  xmlns:md="clr-namespace:LiveMarkdown.Avalonia;assembly=LiveMarkdown.Avalonia" xmlns:shadui="clr-namespace:ShadUI.Controls;assembly=ShadUI"
  xmlns:themes="clr-namespace:ShadUI.Themes;assembly=ShadUI" xmlns:v="clr-namespace:Everywhere.Views"
  xmlns:vc="clr-namespace:Everywhere.ValueConverters" xmlns:vm="clr-namespace:Everywhere.ViewModels"
  MinWidth="400" MinHeight="144.8"
  x:DataType="vm:ChatFloatingWindowViewModel" x:TypeArguments="vm:ChatFloatingWindowViewModel"
  Background="Transparent" CanResize="False"
  ExtendClientAreaChromeHints="NoChrome" ExtendClientAreaToDecorationsHint="True"
  IsOpened="{Binding IsOpened, Mode=OneWayToSource}"
  RequestedThemeVariant="{x:Static themes:ThemeVariants.Acrylic}"
  ShowInTaskbar="{Binding $self.IsWindowPinned}"
  SizeToContent="WidthAndHeight" SystemDecorations="BorderOnly"
  TargetBoundingRect="{Binding TargetBoundingRect}"
  Topmost="True" TransparencyLevelHint="AcrylicBlur"
  WindowStartupLocation="Manual">

  <Grid
    x:Name="RootGrid" RowDefinitions="44,*,Auto">
    <ExperimentalAcrylicBorder
      x:Name="ExperimentalAcrylicBorder" Grid.Row="0"
      Grid.RowSpan="2">
      <ExperimentalAcrylicBorder.Material>
        <ExperimentalAcrylicMaterial
          FallbackColor="#CC000000" MaterialOpacity="0.7"
          TintColor="Black" TintOpacity="0.4"/>
      </ExperimentalAcrylicBorder.Material>
    </ExperimentalAcrylicBorder>

    <DockPanel
      Grid.Row="0" Margin="8"
      Background="Transparent" LastChildFill="True"
      PointerPressed="HandleTitleBarPointerPressed">
      <Viewbox
        DockPanel.Dock="Left" Width="36"
        Height="36" Margin="0,0,0,-4">
        <ContentPresenter Content="{StaticResource AssistantAvatar}"/>
      </Viewbox>

      <StackPanel
        DockPanel.Dock="Right" VerticalAlignment="Center"
        Orientation="Horizontal" Spacing="4">
        <StackPanel.Styles>
          <Style Selector=":is(Button).TitleBar">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="MinHeight" Value="28"/>
            <Setter Property="MinWidth" Value="28"/>
            <Setter Property="Width" Value="28"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="Background" Value="Transparent"/>

            <Style Selector="^.Close /template/ Border#HoverBackground">
              <Setter Property="Background" Value="#C42B1C"/>
            </Style>

            <Style Selector="^ LucideIcon">
              <Setter Property="Size" Value="20"/>
              <Setter Property="HorizontalAlignment" Value="Center"/>
              <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
          </Style>

          <Style Selector="FlyoutPresenter">
            <Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource AcrylicBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="8.5"/>
            <Setter Property="Padding" Value="0"/>
          </Style>

          <Style Selector="MenuFlyoutPresenter">
            <Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource AcrylicBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="8.5"/>
            <Setter Property="Padding" Value="0"/>

            <Style Selector="^ MenuItem.MenuFlyoutMenuItem /template/ Border#HoverBackground">
              <Setter Property="Background" Value="{DynamicResource SecondaryCardBackgroundColor}"/>
            </Style>
          </Style>
        </StackPanel.Styles>

        <Button
          x:Name="HistoryButton" Classes="Ghost TitleBar"
          Command="{Binding ChatContextManager.UpdateHistory}"
          ToolTip.Tip="{I18N {x:Static LocaleKey.ChatFloatingWindow_History_ToolTip}}">
          <Button.Flyout>
            <Flyout ShowMode="Transient">
              <ScrollViewer
                Width="200" MaxHeight="400"
                HorizontalContentAlignment="Stretch" HorizontalScrollBarVisibility="Disabled"
                VerticalScrollBarVisibility="Auto">
                <ItemsControl
                  Margin="8" Padding="0"
                  ItemsSource="{Binding ChatContextManager.History}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel
                        Orientation="Vertical" Spacing="8"/>
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>

                  <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="chat:ChatContextHistory">
                      <StackPanel
                        Orientation="Vertical" Spacing="4">
                        <TextBlock
                          Classes="Muted" HorizontalAlignment="Left"
                          FontSize="12"
                          Text="{Binding Date}"/>

                        <ListBox
                          Padding="0" Background="Transparent"
                          BorderThickness="0"
                          ItemsSource="{Binding Contexts}"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                          SelectedItem="{Binding $parent[v:ChatFloatingWindow].((vm:ChatFloatingWindowViewModel)DataContext).ChatContextManager.Current, FallbackValue={x:Null}}">
                          <ListBox.Styles>
                            <Style Selector="Button.More">
                              <Setter Property="Padding" Value="4"/>
                            </Style>

                            <Style Selector="LucideIcon.MenuFlyoutIcon">
                              <Setter Property="Width" Value="14"/>
                              <Setter Property="Height" Value="14"/>
                              <Setter Property="Size" Value="14"/>
                            </Style>
                          </ListBox.Styles>

                          <ListBox.ItemContainerTheme>
                            <ControlTheme TargetType="ListBoxItem">
                              <Style Selector="^:pointerover">
                                <Setter Property="Background" Value="{DynamicResource CardBackgroundColor}"/>

                                <Style Selector="^ Button.More">
                                  <Setter Property="IsVisible" Value="True"/>
                                  <Setter Property="Height" Value="28"/>
                                  <Setter Property="CornerRadius" Value="4"/>
                                </Style>
                              </Style>

                              <Style Selector="^:selected">
                                <Setter Property="Background" Value="{DynamicResource SecondaryCardBackgroundColor}"/>

                                <Style Selector="^ Border#SelectedBorder">
                                  <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
                                </Style>
                              </Style>

                              <Setter Property="Background" Value="Transparent"/>
                              <Setter Property="Template">
                                <ControlTemplate TargetType="ListBoxItem">
                                  <DockPanel
                                    Height="28" LastChildFill="True">
                                    <Border
                                      x:Name="SelectedBorder" DockPanel.Dock="Left"
                                      Width="4" Margin="0,2,2,2"
                                      CornerRadius="2"/>

                                    <Border
                                      Background="{TemplateBinding Background}"
                                      CornerRadius="4">
                                      <DockPanel LastChildFill="True">
                                        <Button
                                          Classes="Ghost More" DockPanel.Dock="Right"
                                          MinWidth="28" MinHeight="28"
                                          IsVisible="False">
                                          <LucideIcon
                                            Kind="Ellipsis" Size="16"/>

                                          <Button.Flyout>
                                            <MenuFlyout Placement="BottomEdgeAlignedLeft">
                                              <!--  <MenuItem  -->
                                              <!--  Classes="MenuFlyoutMenuItem"  -->
                                              <!--  Command="{Binding $parent[v:ChatFloatingWindow].((vm:ChatFloatingWindowViewModel)DataContext).ChatContextManager.RenameCommand, FallbackValue={x:Null}}"  -->
                                              <!--  CommandParameter="{Binding $parent[ListBoxItem].Content}"  -->
                                              <!--  Header="{I18N {x:Static LocaleKey.ChatFloatingWindow_HistoryAction_Rename}}">  -->
                                              <!--   <MenuItem.Icon> -->
                                              <!--  <LucideIcon  -->
                                              <!--  Classes="MenuFlyoutIcon" Kind="Pencil"/>  -->
                                              <!--   </MenuItem.Icon> -->
                                              <!-- </MenuItem> -->
                                              <MenuItem
                                                Classes="MenuFlyoutMenuItem"
                                                Command="{Binding $parent[v:ChatFloatingWindow].((vm:ChatFloatingWindowViewModel)DataContext).ChatContextManager.RemoveCommand, FallbackValue={x:Null}}"
                                                CommandParameter="{Binding $parent[ListBoxItem].Content}"
                                                Foreground="{DynamicResource ErrorColor}"
                                                Header="{I18N {x:Static LocaleKey.ChatFloatingWindow_HistoryAction_Delete}}">
                                                <MenuItem.Icon>
                                                  <LucideIcon
                                                    Classes="MenuFlyoutIcon"
                                                    Foreground="{DynamicResource ErrorColor}"
                                                    Kind="Trash"/>
                                                </MenuItem.Icon>
                                              </MenuItem>
                                            </MenuFlyout>
                                          </Button.Flyout>
                                        </Button>

                                        <ContentPresenter
                                          Margin="4,0" VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                      </DockPanel>
                                    </Border>
                                  </DockPanel>
                                </ControlTemplate>
                              </Setter>
                            </ControlTheme>
                          </ListBox.ItemContainerTheme>

                          <ListBox.ItemTemplate>
                            <DataTemplate DataType="chat:ChatContext">
                              <TextBlock
                                Text="{Binding Metadata.Topic, TargetNullValue={I18N {x:Static LocaleKey.ChatContext_Metadata_Title_Default}}}"
                                TextTrimming="CharacterEllipsis"/>
                            </DataTemplate>
                          </ListBox.ItemTemplate>
                        </ListBox>
                      </StackPanel>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ItemsControl>
              </ScrollViewer>
            </Flyout>
          </Button.Flyout>

          <LucideIcon
            Kind="History" Size="16"/>
        </Button>

        <Button
          Classes="Ghost TitleBar"
          Command="{Binding ChatContextManager.CreateNewCommand}"
          ToolTip.Tip="{I18N {x:Static LocaleKey.ChatFloatingWindow_CreateNew_ToolTip}}">
          <LucideIcon Kind="Plus"/>
        </Button>

        <ToggleButton
          Classes="Ghost TitleBar"
          IsChecked="{Binding $parent[v:ChatFloatingWindow].IsWindowPinned, Mode=TwoWay}"
          ToolTip.Tip="{I18N {x:Static LocaleKey.ChatFloatingWindow_TogglePin_ToolTip}}">
          <LucideIcon
            Kind="Pin" Size="16"/>
        </ToggleButton>

        <Button
          Classes="Ghost TitleBar Close"
          Command="{Binding CloseCommand}"
          ToolTip.Tip="{I18N {x:Static LocaleKey.ChatFloatingWindow_Close_ToolTip}}">
          <LucideIcon Kind="X"/>
        </Button>
      </StackPanel>

      <TextBlock
        Classes="Large" Margin="8,0,0,0"
        VerticalAlignment="Center" IsHitTestVisible="False"
        Text="{I18N {x:Static LocaleKey.ChatFloatingWindow_Title}}"/>
    </DockPanel>

    <ScrollViewer
      Grid.Row="1" DockPanel.Dock="Top"
      HorizontalContentAlignment="Stretch" HorizontalScrollBarVisibility="Disabled"
      VerticalScrollBarVisibility="Auto">
      <Interaction.Behaviors>
        <be:AutoScrollBehavior/>
      </Interaction.Behaviors>

      <Panel>
        <Panel.Styles>
          <Style Selector="shadui|Loading">
            <Setter Property="Foreground" Value="{DynamicResource SukiLowText}"/>
          </Style>
        </Panel.Styles>

        <ItemsControl
          Margin="0,0,0,8"
          ItemsSource="{Binding QuickActions}">
          <ItemsControl.IsVisible>
            <MultiBinding Converter="{x:Static BoolConverters.And}">
              <Binding Path="!!$self.ItemCount"/>
              <Binding
                Converter="{x:Static vc:NumberConverters.NotGreaterThanOne}"
                Path="ChatContextManager.ChatMessageNodes.Count"/>
            </MultiBinding>
          </ItemsControl.IsVisible>

          <ItemsControl.DataTemplates>
            <DataTemplate DataType="common:DynamicNamedCommand">
              <Button
                Classes="Secondary" Height="32"
                Padding="12,4"
                Command="{Binding Command}"
                CommandParameter="{Binding CommandParameter}"
                CornerRadius="18">
                <StackPanel
                  VerticalAlignment="Center" Orientation="Vertical"
                  Spacing="4">
                  <StackPanel
                    Orientation="Horizontal" Spacing="6">
                    <LucideIcon
                      VerticalAlignment="Center"
                      Kind="{Binding Icon}"
                      Size="19"/>
                    <TextBlock
                      VerticalAlignment="Center"
                      Text="{Binding HeaderKey^}"/>
                  </StackPanel>

                  <TextBlock
                    IsVisible="{Binding !!DescriptionKey}"
                    Text="{Binding DescriptionKey^, FallbackValue={x:Null}}"
                    TextWrapping="Wrap"/>
                </StackPanel>
              </Button>
            </DataTemplate>
          </ItemsControl.DataTemplates>

          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <WrapPanel
                HorizontalAlignment="Center" VerticalAlignment="Center"
                ItemSpacing="8" LineSpacing="6"/>
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
        </ItemsControl>

        <ItemsControl
          x:Name="ItemsControl" Margin="0,0,0,8"
          Padding="8,0"
          IsVisible="{Binding !!$self.ItemCount}"
          ItemsSource="{Binding ChatContextManager.ChatMessageNodes}">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel
                Orientation="Vertical" Spacing="6"/>
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>

          <ItemsControl.Styles>
            <Style Selector="shadui|Loading">
              <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
            </Style>

            <Style Selector="Border.ChatBubble">
              <Setter Property="Padding" Value="8,4"/>
              <Setter Property="CornerRadius" Value="12"/>
              <Setter Property="BorderThickness" Value="1"/>
              <Setter Property="Background" Value="{DynamicResource CardBackgroundColor}"/>
              <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
            </Style>

            <Style Selector="Border.Invalid">
              <Setter Property="Background" Value="{DynamicResource ErrorColor20}"/>
              <Setter Property="ToolTip.Tip" Value="Invalid"/>
            </Style>

            <Style Selector="Button.Ghost">
              <Setter Property="Padding" Value="4"/>
              <Setter Property="MinHeight" Value="0"/>
              <Setter Property="Height" Value="NaN"/>
              <Setter Property="Cursor" Value="Hand"/>
            </Style>

            <Style Selector="Button LucideIcon">
              <Setter Property="Size" Value="14"/>
            </Style>

            <Style Selector="SelectableTextBlock">
              <Setter Property="TextWrapping" Value="Wrap"/>
            </Style>

            <Style Selector="NumericUpDown">
              <Setter Property="Background" Value="{x:Null}"/>
              <Setter Property="BorderBrush" Value="{x:Null}"/>
              <Setter Property="BorderThickness" Value="0"/>
              <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
              <Setter Property="Template">
                <ControlTemplate>
                  <ButtonSpinner
                    Name="PART_Spinner" HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center">
                    <Panel>
                      <!--  TextBox is useless but necessary for NumericUpDown  -->
                      <TextBox
                        x:Name="PART_TextBox" IsVisible="False"/>
                      <TextBlock
                        VerticalAlignment="Center" FontSize="12"
                        Foreground="{TemplateBinding Foreground}"
                        TextAlignment="Center" TextWrapping="NoWrap">
                        <Run Text="{Binding Value, StringFormat={}{0:F0}, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Run Text="/"/>
                        <Run Text="{Binding Maximum, StringFormat={}{0:F0}, RelativeSource={RelativeSource TemplatedParent}}"/>
                      </TextBlock>
                    </Panel>
                  </ButtonSpinner>
                </ControlTemplate>
              </Setter>

              <Style Selector="^ ButtonSpinner">
                <Setter Property="Template">
                  <ControlTemplate>
                    <Grid ColumnDefinitions="Auto,*,Auto">
                      <RepeatButton
                        Name="PART_DecreaseButton" Grid.Column="0"
                        Padding="2" Background="Transparent"
                        BorderBrush="{x:Null}"
                        BorderThickness="0"
                        Foreground="{TemplateBinding Foreground}">
                        <LucideIcon
                          Kind="ChevronLeft" Size="18"/>
                      </RepeatButton>
                      <ContentPresenter
                        Name="PART_ContentPresenter" Grid.Column="1"
                        HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                        Content="{TemplateBinding Content}"
                        TabIndex="1"/>
                      <RepeatButton
                        Name="PART_IncreaseButton" Grid.Column="2"
                        Padding="2" Background="Transparent"
                        BorderBrush="{x:Null}"
                        BorderThickness="0"
                        Foreground="{TemplateBinding Foreground}">
                        <LucideIcon
                          Kind="ChevronRight" Size="18"/>
                      </RepeatButton>
                    </Grid>
                  </ControlTemplate>
                </Setter>
              </Style>
            </Style>

            <Style Selector="ContentControl.ChatMessage">
              <Setter Property="at:DataTemplatesAttach.DataTemplates">
                <DataTemplates>
                  <DataTemplate DataType="chat:AssistantChatMessage">
                    <StackPanel
                      Classes="ChatMessage Assistant" Background="Transparent"
                      Orientation="Vertical" Spacing="4">
                      <ItemsControl ItemsSource="{Binding FunctionCalls, Converter={x:Static vc:ObservableListConverters.ObservableOnDispatcher}}">
                        <ItemsControl.ItemsPanel>
                          <ItemsPanelTemplate>
                            <StackPanel Spacing="2"/>
                          </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                          <DataTemplate>
                            <ContentControl
                              Classes="ChatMessage"
                              Content="{Binding}"/>
                          </DataTemplate>
                        </ItemsControl.ItemTemplate>
                      </ItemsControl>

                      <md:MarkdownRenderer
                        InlineHyperlinkCommand="{Binding $parent[v:ChatFloatingWindow].LaunchInlineHyperlinkCommand}"
                        MarkdownBuilder="{Binding MarkdownBuilder}"/>

                      <Border
                        Padding="8,4" HorizontalAlignment="Left"
                        Background="{DynamicResource ErrorColor20}"
                        CornerRadius="4"
                        IsVisible="{Binding !!ErrorMessageKey}">
                        <SelectableTextBlock
                          Text="{Binding ErrorMessageKey^, FallbackValue={x:Null}}"
                          TextWrapping="Wrap"/>
                      </Border>

                      <shadui:Skeleton
                        Width="12" Height="12"
                        HorizontalAlignment="Left"
                        Background="{DynamicResource PrimaryColor}"
                        CornerRadius="8"
                        IsVisible="{Binding IsBusy}"/>

                      <StackPanel
                        x:Name="ChatMessageOperationPanel"
                        IsVisible="{Binding !IsBusy}"
                        Orientation="Horizontal">
                        <NumericUpDown
                          x:Name="ChoiceSelector" Margin="0,0,4,0"
                          IsVisible="{Binding $parent[ContentControl].((chat:ChatMessageNode)DataContext).Parent.ChoiceCount, FallbackValue=False, Converter={x:Static vc:NumberConverters.GreaterThanOne}}"
                          Maximum="{Binding $parent[ContentControl].((chat:ChatMessageNode)DataContext).Parent.ChoiceCount, FallbackValue=1}"
                          Minimum="1"
                          Value="{Binding $parent[ContentControl].((chat:ChatMessageNode)DataContext).Parent.ChoiceIndex, FallbackValue=1, Converter={x:Static vc:NumberConverters.PlusOne}}"/>

                        <Button
                          Classes="Ghost"
                          Command="{Binding $parent[v:ChatFloatingWindow].ViewModel.RetryCommand}"
                          CommandParameter="{Binding $parent[ContentControl].DataContext}"
                          ToolTip.Tip="{I18N {x:Static LocaleKey.ChatFloatingWindow_ChatMessage_Assistant_Regenerate}}">
                          <LucideIcon Kind="RefreshCcw"/>
                        </Button>
                        <Button
                          Classes="Ghost"
                          Command="{Binding $parent[v:ChatFloatingWindow].ViewModel.CopyCommand}"
                          CommandParameter="{Binding}"
                          ToolTip.Tip="{I18N {x:Static LocaleKey.ChatFloatingWindow_ChatMessage_Assistant_Copy}}">
                          <LucideIcon Kind="Copy"/>
                        </Button>
                      </StackPanel>
                    </StackPanel>
                  </DataTemplate>

                  <DataTemplate DataType="chat:UserChatMessage">
                    <StackPanel
                      Classes="ChatMessage User" Margin="36,0,0,0"
                      HorizontalAlignment="Right" Background="Transparent"
                      Orientation="Vertical" Spacing="4">
                      <Border
                        Classes="ChatBubble" HorizontalAlignment="Right">
                        <SelectableTextBlock Inlines="{Binding Inlines}"/>
                      </Border>

                      <ItemsControl ItemsSource="{Binding Attachments}">
                        <ItemsControl.ItemsPanel>
                          <ItemsPanelTemplate>
                            <WrapPanel
                              ItemSpacing="6" LineSpacing="4"/>
                          </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.DataTemplates>
                          <DataTemplate DataType="chat:ChatFileAttachment">
                            <Panel>
                              <Border
                                ClipToBounds="True" CornerRadius="4"
                                IsVisible="{Binding IsImage}">
                                <Image
                                  MaxWidth="64" MaxHeight="64"
                                  Source="{Binding Image}">
                                  <ToolTip.Tip>
                                    <Image Source="{Binding Image}"/>
                                  </ToolTip.Tip>
                                </Image>
                              </Border>

                              <Border
                                Height="24"
                                Background="{DynamicResource CardBackgroundColor}"
                                CornerRadius="4"
                                IsVisible="{Binding !IsImage}"
                                ToolTip.Tip="{Binding FilePath}">
                                <StackPanel
                                  Margin="6,0" Orientation="Horizontal"
                                  Spacing="4">
                                  <LucideIcon
                                    VerticalAlignment="Center"
                                    Kind="{Binding Icon}"
                                    Size="14"/>
                                  <TextBlock
                                    VerticalAlignment="Center" FontSize="12"
                                    Text="{Binding HeaderKey^}"/>
                                </StackPanel>
                              </Border>
                            </Panel>
                          </DataTemplate>

                          <DataTemplate DataType="chat:ChatVisualElementAttachment">
                            <Border
                              Height="24"
                              Background="{DynamicResource CardBackgroundColor}"
                              Classes.Invalid="{Binding Element.Target, Converter={x:Static ObjectConverters.IsNull}, FallbackValue=true}"
                              CornerRadius="4">
                              <StackPanel
                                Margin="6,0" Orientation="Horizontal"
                                Spacing="4">
                                <LucideIcon
                                  VerticalAlignment="Center"
                                  Kind="{Binding Icon}"
                                  Size="14"/>
                                <TextBlock
                                  VerticalAlignment="Center" FontSize="12"
                                  Text="{Binding HeaderKey^}"/>
                              </StackPanel>
                            </Border>
                          </DataTemplate>

                          <DataTemplate DataType="chat:ChatAttachment">
                            <Border
                              Height="24"
                              Background="{DynamicResource CardBackgroundColor}"
                              CornerRadius="4">
                              <StackPanel
                                Margin="6,0" Orientation="Horizontal"
                                Spacing="4">
                                <LucideIcon
                                  VerticalAlignment="Center"
                                  Kind="{Binding Icon}"
                                  Size="14"/>
                                <TextBlock
                                  VerticalAlignment="Center" FontSize="12"
                                  Text="{Binding HeaderKey^}"/>
                              </StackPanel>
                            </Border>
                          </DataTemplate>
                        </ItemsControl.DataTemplates>
                      </ItemsControl>

                      <!--  TODO: Edit operations  -->
                    </StackPanel>
                  </DataTemplate>

                  <DataTemplate DataType="chat:ActionChatMessage">
                    <Border
                      Classes="ChatMessage Action ChatBubble" Margin="0,0,36,0"
                      Padding="0" HorizontalAlignment="Left">
                      <Border.Styles>
                        <Style Selector="Expander:not(.CanExpand)">
                          <Style Selector="^ ToggleButton#PART_ToggleButton">
                            <Setter Property="IsEnabled" Value="False"/>
                          </Style>
                          <Style Selector="^ LucideIcon#PART_Icon">
                            <Setter Property="IsVisible" Value="False"/>
                          </Style>
                          <Style Selector="^ ContentControl#ContentExpandControlContainer">
                            <Setter Property="IsVisible" Value="False"/>
                          </Style>
                        </Style>
                      </Border.Styles>

                      <StackPanel>
                        <Panel>
                          <ToggleButton
                            x:Name="PART_ExpandToggleButton" MinHeight="0"
                            Background="Transparent" Focusable="False">
                            <ToggleButton.Template>
                              <ControlTemplate TargetType="ToggleButton">
                                <Panel Background="Transparent"/>
                              </ControlTemplate>
                            </ToggleButton.Template>
                          </ToggleButton>

                          <StackPanel
                            Margin="8,4" VerticalAlignment="Center"
                            IsHitTestVisible="False" Orientation="Horizontal"
                            Spacing="4">
                            <LucideIcon
                              VerticalAlignment="Center"
                              Kind="{Binding Icon}"
                              Size="14"/>
                            <TextBlock
                              VerticalAlignment="Center" FontSize="12"
                              Text="{Binding HeaderKey^, FallbackValue={x:Null}}"/>
                            <shadui:Loading
                              Width="12" Height="12"
                              VerticalAlignment="Center" IsHitTestVisible="False"
                              IsVisible="{Binding IsBusy}"/>
                            <LucideIcon
                              Margin="0,1,0,0" VerticalAlignment="Center"
                              Foreground="{DynamicResource SuccessColor}"
                              Kind="Check" Size="14">
                              <LucideIcon.IsVisible>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                  <Binding Path="!IsBusy"/>
                                  <Binding
                                    Converter="{x:Static ObjectConverters.IsNull}"
                                    Path="ErrorMessageKey"/>
                                </MultiBinding>
                              </LucideIcon.IsVisible>
                            </LucideIcon>
                            <LucideIcon
                              Margin="0,1,0,0" VerticalAlignment="Center"
                              Foreground="{DynamicResource ErrorColor}"
                              Kind="X" Size="14">
                              <LucideIcon.IsVisible>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                  <Binding Path="!IsBusy"/>
                                  <Binding
                                    Converter="{x:Static ObjectConverters.IsNotNull}"
                                    Path="ErrorMessageKey"/>
                                </MultiBinding>
                              </LucideIcon.IsVisible>
                            </LucideIcon>
                          </StackPanel>
                        </Panel>

                        <Panel
                          x:Name="PART_ContentExpand"
                          IsVisible="{Binding #PART_ExpandToggleButton.IsChecked}">
                          <Border
                            Margin="8,0,8,4"
                            Background="{DynamicResource ErrorColor20}"
                            CornerRadius="4"
                            IsVisible="{Binding !!ErrorMessageKey}">
                            <SelectableTextBlock
                              Margin="6,4"
                              Text="{Binding ErrorMessageKey^, FallbackValue={x:Null}}"
                              TextWrapping="Wrap"/>
                          </Border>
                        </Panel>
                      </StackPanel>
                    </Border>
                  </DataTemplate>
                </DataTemplates>
              </Setter>
            </Style>
          </ItemsControl.Styles>

          <ItemsControl.ItemTemplate>
            <DataTemplate DataType="chat:ChatMessageNode">
              <ContentControl
                Classes="ChatMessage"
                Content="{Binding Message}"/>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </Panel>
    </ScrollViewer>

    <Border
      Grid.Row="2" Padding="0"
      BorderBrush="{DynamicResource BorderColor}"
      BorderThickness="0,1,0,0" CornerRadius="0">
      <ExperimentalAcrylicBorder Name="PART_AcrylicBorder">
        <ExperimentalAcrylicBorder.Material>
          <ExperimentalAcrylicMaterial
            FallbackColor="#99000000" MaterialOpacity="0.7"
            TintColor="Black" TintOpacity="0"/>
        </ExperimentalAcrylicBorder.Material>

        <v:ChatInputBox
          x:Name="ChatInputBox" Margin="8"
          AcceptsReturn="True"
          CancelCommand="{Binding CancelCommand}"
          ChatAttachmentItemsSource="{Binding ChatAttachments}"
          Command="{Binding SendMessageCommand}"
          Focusable="True"
          IsImageEnabled="{Binding Settings.Internal.IsImageEnabled, Mode=TwoWay}"
          IsImageSupported="{Binding Settings.Model.SelectedModelDefinition.IsImageInputSupported, FallbackValue=false}"
          IsSendButtonEnabled="{Binding !IsBusy}"
          IsToolCallEnabled="{Binding Settings.Internal.IsToolCallEnabled, Mode=TwoWay}"
          IsToolCallSupported="{Binding Settings.Model.SelectedModelDefinition.IsFunctionCallingSupported, FallbackValue=false}"
          MaxChatAttachmentCount="{Binding Settings.Internal.MaxChatAttachmentCount}"
          TextWrapping="Wrap">
          <v:ChatInputBox.AddChatAttachmentMenuItems>
            <MenuItem
              Command="{Binding PickElementCommand}"
              CommandParameter="{x:Static interop:PickElementMode.Screen}"
              Header="{I18N {x:Static LocaleKey.ChatFloatingWindow_ChatInputBox_AddAttachmentMenuItems_PickScreen}}">
              <MenuItem.Icon>
                <LucideIcon
                  Width="18" Height="18"
                  Kind="Monitor" Size="18"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem
              Command="{Binding PickElementCommand}"
              CommandParameter="{x:Static interop:PickElementMode.Window}"
              Header="{I18N {x:Static LocaleKey.ChatFloatingWindow_ChatInputBox_AddAttachmentMenuItems_PickWindow}}">
              <MenuItem.Icon>
                <LucideIcon
                  Width="18" Height="18"
                  Kind="AppWindow" Size="18"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem
              Command="{Binding PickElementCommand}"
              CommandParameter="{x:Static interop:PickElementMode.Element}"
              Header="{I18N {x:Static LocaleKey.ChatFloatingWindow_ChatInputBox_AddAttachmentMenuItems_PickElement}}">
              <MenuItem.Icon>
                <LucideIcon
                  Width="18" Height="18"
                  Kind="SquareMousePointer" Size="18"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem
              Command="{Binding AddClipboardCommand}"
              Header="{I18N {x:Static LocaleKey.ChatFloatingWindow_ChatInputBox_AddAttachmentMenuItems_ClipboardContent}}">
              <MenuItem.Icon>
                <LucideIcon
                  Width="18" Height="18"
                  Kind="ClipboardPaste" Size="18"/>
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem
              Command="{Binding AddFileCommand}"
              Header="{I18N {x:Static LocaleKey.ChatFloatingWindow_ChatInputBox_AddAttachmentMenuItems_AttachFile}}">
              <MenuItem.Icon>
                <LucideIcon
                  Width="18" Height="18"
                  Kind="File" Size="18"/>
              </MenuItem.Icon>
            </MenuItem>
          </v:ChatInputBox.AddChatAttachmentMenuItems>
        </v:ChatInputBox>
      </ExperimentalAcrylicBorder>
    </Border>

    <Border
      Grid.Row="2" Width="10"
      Height="10" Margin="2.5"
      HorizontalAlignment="Right" VerticalAlignment="Bottom"
      Background="Transparent" Cursor="BottomRightCorner"
      PointerPressed="HandleResizeThumbPointerPressed">
      <Viewbox Stretch="Uniform">
        <Path
          Data="M0 14.1 14.2 0M6 14.1l8.2-8.2"
          Stroke="{DynamicResource BorderColor}"
          StrokeThickness="2"/>
      </Viewbox>
    </Border>
  </Grid>
</v:ReactiveWindow>